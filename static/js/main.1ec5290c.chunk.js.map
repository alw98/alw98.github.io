{"version":3,"sources":["resources/github.jpg","resources/gearbox.gif","resources/headshot.jpg","Components/Pages/Home.tsx","Components/Pages/BlogDir.tsx","Components/BlogComponents/BlogQA.tsx","Components/BlogComponents/BlogEntry.tsx","Components/Pages/BlogEntries/2.tsx","Components/Pages/BlogEntries/3.tsx","Components/Pages/BlogEntries/4.tsx","Components/Pages/BlogEntries/5.tsx","Components/Pages/BlogEntries/6.tsx","Components/Pages/BlogEntries/7.tsx","Models/Theme.ts","Models/ColorAuto.ts","Components/Pages/Automata.tsx","Components/HeaderComponents/ThemeController.tsx","Components/HeaderComponents/Header.tsx","Components/Pages/App.tsx","index.tsx"],"names":["module","exports","Home","className","src","loading","alt","href","github","to","BlogDir","BlogQA","this","props","question","response","React","Component","BlogEntry","title","image","qas","map","qa","push","Blog2","Blog3","Blog4","Blog5","Blog6","Blog7","p5","parent","w","h","grid","lastTheme","background","curColor","alive","Theme","setup","p","par","disableFriendlyErrors","window","innerWidth","innerHeight","Array","fill","x","length","y","robit","Robit","r","g","b","canvas","createCanvas","addEventListener","e","preventDefault","draw","hw","hh","ma","Math","max","hma","setupCanvasForDraw","updateGrid","drawGrid","frameCount","console","log","frameRate","i","forEach","pair","l","cur","exists","dx","floor","random","dy","xRes","yRes","f","level","set","c","Pair","windowResized","resizeCanvas","mouseDragged","mouseX","mouseY","getGridIndex","mouseReleased","a","Promise","resolve","setTimeout","colorRed","colorGreen","colorBlue","ystart","xstart","yend","xend","lastFill","ceil","sort","c1","aval","c2","noStroke","xi","yi","rect","xind","yind","stroke","strokeWeight","translate","scale","Automata","targetElement","showTargetElement","id","type","name","onClick","ColorAuto","defaultChecked","htmlFor","document","querySelector","disableBodyScroll","clearAllBodyScrollLocks","ThemeToggle","state","toggle","event","App","setState","xmlns","xmlnsXlink","width","height","transform","style","d","Header","gradientUnits","x1","y1","x2","y2","offset","stopColor","stopOpacity","marginLeft","basename","path","exact","component","Pages","ReactDOM","render","getElementById"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,2oBCK9BC,EAAiB,kBAC1B,yBAAKC,UAAU,aACX,4BAAQA,UAAU,IACd,yBAAKC,IAAKC,IAASC,IAAI,MAAMH,UAAU,aACvC,qDAGA,oEAEI,uBAAGI,KAAK,4BAA2B,yBAAKH,IAAKI,IAAQF,IAAI,cAAcH,UAAU,eAErF,kBAAC,IAAD,CAAMM,GAAG,SAAT,iCAAqD,6BACrD,kBAAC,IAAD,CAAMA,GAAG,aAAT,2CCdCC,EAAoB,kBAChC,yBAAKP,UAAU,OACd,kBAAC,IAAD,CAAMM,GAAG,WAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,iBCXWE,G,MAAb,iLAEQ,OACI,yBAAKR,UAAU,mBACX,wBAAIA,UAAU,iBACTS,KAAKC,MAAMC,UAEhB,yBAAKX,UAAU,iBACVS,KAAKC,MAAME,eARhC,GAA4BC,IAAMC,Y,iBCOrBC,EAAb,iLAEY,OACA,yBAAKf,UAAU,wBACX,iDACA,4BAAKS,KAAKC,MAAMM,OAChB,yBAAKf,IAAKgB,IAAOd,IAAI,WAAWH,UAAU,kBACzCS,KAAKC,MAAMQ,IAAIC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAQT,SAAUS,EAAGT,SAAUC,SAAUQ,EAAGR,mBAPtF,GAA+BC,IAAMC,WCNjCI,EAAiB,GAiCrBA,EAAIG,KAAK,CAACV,SA/BJ,gCA+BkBC,SA9BlB,mbA+BNM,EAAIG,KAAK,CAACV,SAzBJ,oBAyBkBC,SAxBlB,+WAyBNM,EAAIG,KAAK,CAACV,SApBJ,4BAoBkBC,SAnBlB,oQAoBNM,EAAIG,KAAK,CAACV,SAjBJ,0FAiBkBC,SAhBlB,wbAiBNM,EAAIG,KAAK,CAACV,SAZJ,6BAYkBC,SAXlB,goBAYC,IAAMU,EAAkB,kBAC3B,kBAAC,EAAD,CAAWJ,IAAKA,EAAKF,MAxCb,8BCCRE,EAAiB,GA8BrBA,EAAIG,KAAK,CAACV,SA5BJ,gCA4BkBC,SA3BlB,oRA4BNM,EAAIG,KAAK,CAACV,SAvBJ,oBAuBkBC,SAtBlB,0RAuBNM,EAAIG,KAAK,CAACV,SAnBJ,4BAmBkBC,SAlBlB,yPAmBNM,EAAIG,KAAK,CAACV,SAfJ,kGAekBC,SAdlB,0RAeNM,EAAIG,KAAK,CAACV,SAXJ,kCAWkBC,SAVlB,koBAYC,IAAMW,EAAkB,kBAC3B,kBAAC,EAAD,CAAWL,IAAKA,EAAKF,MAtCb,+CCCRE,EAAiB,GAiBrBA,EAAIG,KAAK,CAACV,SAfJ,gCAekBC,SAdlB,wKAeNM,EAAIG,KAAK,CAACV,SAbJ,oBAakBC,SAZlB,sJAaNM,EAAIG,KAAK,CAACV,SAXJ,4BAWkBC,SAVlB,qMAWNM,EAAIG,KAAK,CAACV,SATJ,wGASkBC,SARlB,gMASNM,EAAIG,KAAK,CAACV,SAPJ,kCAOkBC,SANlB,8OAQC,IAAMY,EAAkB,kBAC3B,kBAAC,EAAD,CAAWN,IAAKA,EAAKF,MAzBb,8CCCRE,EAAiB,GAmBrBA,EAAIG,KAAK,CAACV,SAjBJ,gCAiBkBC,SAhBlB,mIAiBNM,EAAIG,KAAK,CAACV,SAfJ,oBAekBC,SAdlB,+FAeNM,EAAIG,KAAK,CAACV,SAbJ,4BAakBC,SAZlB,8JAaNM,EAAIG,KAAK,CAACV,SAXJ,yDAWkBC,SAVlB,0gBAWNM,EAAIG,KAAK,CAACV,SAPJ,kCAOkBC,SANlB,oMAQC,IAAMa,EAAkB,kBAC3B,kBAAC,EAAD,CAAWP,IAAKA,EAAKF,MA3Bb,8BCCRE,EAAiB,GAiBrBA,EAAIG,KAAK,CAACV,SAfJ,gCAekBC,SAdlB,6KAeNM,EAAIG,KAAK,CAACV,SAbJ,oBAakBC,SAZlB,iCAaNM,EAAIG,KAAK,CAACV,SAXJ,4BAWkBC,SAVlB,sKAWNM,EAAIG,KAAK,CAACV,SATJ,qDASkBC,SARlB,iLASNM,EAAIG,KAAK,CAACV,SAPJ,kCAOkBC,SANlB,mSAQC,IAAMc,EAAkB,kBAC3B,kBAAC,EAAD,CAAWR,IAAKA,EAAKF,MAzBb,8BCCRE,EAAiB,GAqBrBA,EAAIG,KAAK,CAACV,SAnBJ,gCAmBkBC,SAlBlB,qcAmBNM,EAAIG,KAAK,CAACV,SAfJ,oBAekBC,SAdlB,4GAeNM,EAAIG,KAAK,CAACV,SAbJ,4BAakBC,SAZlB,+MAaNM,EAAIG,KAAK,CAACV,SAXJ,yDAWkBC,SAVlB,uXAWNM,EAAIG,KAAK,CAACV,SARJ,kCAQkBC,SAPlB,+XASC,IAAMe,EAAkB,kBAC3B,kBAAC,EAAD,CAAWT,IAAKA,EAAKF,MA7Bb,8B,0CCCZ,ICFIY,EAAIC,EAAQC,EAAGC,EAEfC,EACAC,EACAC,EACAC,EACAC,EDJAC,EAAQ,QCMCC,EAAQ,SAACC,EAAQC,IAC5BZ,EAAKW,GACFE,uBAAwB,EAC3BZ,EAASW,EACTV,EAAIY,OAAOC,WACXZ,EAAIW,OAAOE,YAAc,GACzBZ,EAAOa,MAbI,KAaQC,KAAK,GAAG3B,KAAI,SAAA4B,GAAC,OAAIF,MAbb,QAcvB,IAAI,IAAIE,EAAI,EAAGA,EAAIf,EAAKgB,OAAQD,IAC9B,IAAI,IAAIE,EAAI,EAAGA,EAAIjB,EAAK,GAAGgB,OAAQC,IAAI,CACrC,IAAIC,EAAQ,IAAIC,GAChBnB,EAAKe,GAAGE,GAAKC,EAGjBd,EAAQ,GACRH,EAAYI,EACZH,EAAuB,SAAVG,EAAmB,EAAI,IACpCF,EAAW,CAACiB,EAAG,IAAKC,EAAG,EAAGC,EAAG,GAC7B,IAAIC,EAAS3B,EAAG4B,aAAa1B,EAAGC,GAAGF,OAAOA,GAAQ0B,OAClDA,EAAOvD,WAAa,oBACpBuD,EAAOE,iBAAiB,aAAa,SAASC,GAEtCA,EAAEC,oBAEP,IAGQC,EAAO,SAAChC,GACnB,IAAMiC,EAAK/B,EAAE,EAAGgC,EAAK/B,EAAE,EAAGgC,EAAKC,KAAKC,IAAInC,EAAGC,GAAImC,EAAMH,EAAG,EACxDI,GAAmBvC,EAAIiC,EAAIC,GAG3BM,KACAC,GAASzC,EAAImC,EAAIG,GAEZtC,EAAG0C,WAAa,KAAO,GACxBC,QAAQC,IAAI5C,EAAG6C,cAGfL,GAAa,WACjB,IAAI,IAAIM,EAAI,EAAGA,EA9CoC,EA8CtBA,IAC3BtC,EAAMuC,SAAQ,SAAAC,GACZ,IAAI7B,EAAI6B,EAAKC,EAAG5B,EAAI2B,EAAKxB,EACrB0B,EAAM9C,EAAKe,GAAGE,GAClB,GAAI6B,EAAIC,OAAR,CAIA,IAAIC,EAAKhB,KAAKiB,MAAsB,EAAhBjB,KAAKkB,SAAe,GACpCC,EAAKnB,KAAKiB,MAAsB,EAAhBjB,KAAKkB,SAAe,GACxC,IAAU,IAANnC,IAAmB,IAARiC,KAAqBI,MAANrC,GAAyB,IAAPiC,KACpC,IAAN/B,IAAmB,IAARkC,KAAqBE,MAANpC,GAAyB,IAAPkC,GAAU,CACxD,IAAIG,EAAItD,EAAKe,EAAIiC,GAAI/B,EAAIkC,IACrBG,EAAEP,QAAUD,EAAIS,MAAQ,GAC1BD,EAAEE,IAAIV,EAAIW,EAAErC,EAAG0B,EAAIW,EAAEpC,EAAGyB,EAAIW,EAAEnC,EAAGwB,EAAIS,MAAQ,GAC7CnD,EAAMf,KAAK,IAAIqE,GAAK3C,EAAIiC,EAAI/B,EAAIkC,KAExBG,EAAEP,SACK,MAAZD,EAAIW,EAAErC,GAAuB,MAAVkC,EAAEG,EAAEnC,GAET,IAAZgC,EAAEC,MACHD,EAAEE,IAAI,IAAK,EAAG,EAAG,GACdF,EAAEC,QACJT,EAAIS,MArEkB,GAqEFT,EAAIS,SAEP,MAAZT,EAAIW,EAAEpC,GAAuB,MAAViC,EAAEG,EAAErC,GAEhB,IAAZkC,EAAEC,MACHD,EAAEE,IAAI,EAAG,IAAK,EAAG,GACdF,EAAEC,QACJT,EAAIS,MA5EkB,GA4EFT,EAAIS,SAEP,MAAZT,EAAIW,EAAEnC,GAAuB,MAAVgC,EAAEG,EAAEpC,IAEhB,IAAZiC,EAAEC,MACHD,EAAEE,IAAI,EAAG,EAAG,IAAK,GACdF,EAAEC,QACJT,EAAIS,MAnFkB,GAmFFT,EAAIS,gBAhCjChB,QAAQC,IAAI,+BA4CPmB,GAAgB,SAAC/D,GAC5BE,EAAIY,OAAOC,WACXZ,EAAIW,OAAOE,YAAc,GACzBhB,EAAGgE,aAAa9D,EAAGC,IAGR8D,GAAe,SAACjE,GAC3B,IAAImB,EAAInB,EAAGkE,OAAQ7C,EAAIrB,EAAGmE,OAC1B,KAAGhD,EAAI,GAAKA,EAAIjB,GAAKmB,EAAI,GAAKA,EAAIlB,GAAlC,CAEA,IAEI6C,EAAOoB,GAFEjD,EAAIjB,EAAI,IACNmB,EAAIlB,EAAI,IAEnBmB,EAAQlB,EAAK4C,EAAKC,GAAGD,EAAKxB,GAC1BF,EAAM6B,QACR3C,EAAMf,KAAKuD,GACb1B,EAAMsC,IAAIrD,EAASiB,EAAGjB,EAASkB,EAAGlB,EAASmB,EA/GN,KAkH1B2C,GAAa,uCAAG,WAAOrE,GAAP,eAAAsE,EAAA,6DACvB5C,EAAInB,EADmB,SAErB,IAAIgE,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,MAFtB,UAGxB9C,IAAMnB,EAHkB,iDAK3B0D,GAAajE,GALc,2CAAH,sDAQb0E,GAAW,WACtBnE,EAAW,CAACiB,EAAG,IAAKC,EAAG,EAAGC,EAAG,IAGlBiD,GAAa,WACxBpE,EAAW,CAACiB,EAAG,EAAGC,EAAG,IAAKC,EAAG,IAGlBkD,GAAY,WACvBrE,EAAW,CAACiB,EAAG,EAAGC,EAAG,EAAGC,EAAG,MAEvBe,GAAW,SAACzC,EAAImC,EAAIG,GACxB,IACKuC,EAAQC,EAAQC,EAAMC,EA4BvBC,EA7BE7B,EAAKjB,EAtIA,IAsIWoB,EAAKpB,EAtIJ,IAwIpBjC,IAAMC,GACP0E,GAAUvC,EACVyC,EAAOzC,EACPwC,GAAUxC,EACV0C,EAAO1C,GACCH,IAAOjC,GACf2E,GAAUvC,GAAOF,KAAK8C,MAAOhF,EAAI,EAAMC,EAAI,GAAMoD,GAAM,GAAKA,EAE5DwB,GADAA,EAAO5E,EAAI,EAAIoD,GACDjB,EAAMnC,EAAI,EAAI4E,EAC5BD,GAAUxC,EACV0C,EAAO1C,IAEPwC,GAAUxC,GAAOF,KAAK8C,MAAO/E,EAAI,EAAMD,EAAI,GAAMqD,GAAM,GAAKH,EAE5D4B,GADAA,EAAO9E,EAAI,EAAIkD,GACDd,EAAMpC,EAAI,EAAI8E,EAC5BH,GAAUvC,EACVyC,EAAOzC,GAGT9B,EAAM2E,MAAK,SAACb,EAAG5C,GACb,IAAI0D,EAAKhF,EAAKkE,EAAErB,GAAGqB,EAAE9C,GACjB6D,EAAgB,EAATD,EAAGvB,EAAErC,EAAiB,EAAT4D,EAAGvB,EAAEpC,EAAQ2D,EAAGvB,EAAEnC,EACtC4D,EAAKlF,EAAKsB,EAAEuB,GAAGvB,EAAEF,GAErB,OAAO6D,GADa,EAATC,EAAGzB,EAAErC,EAAiB,EAAT8D,EAAGzB,EAAEpC,EAAQ6D,EAAGzB,EAAEnC,MAG5C1B,EAAGuF,WAEH/E,EAAMuC,SAAQ,SAAAC,GACZ,IAA8B7B,EAAGE,EAA7BmE,EAAKxC,EAAKC,EAAGwC,EAAKzC,EAAKxB,EAG3B,GADAH,EAAWoE,EAAKrC,EAAXd,KADLnB,EAAWqE,EAAKpC,EAAXd,GAEEwC,GAAU3D,EAAI6D,GAAQ3D,EAAIwD,GAAUxD,EAAI0D,GAA/C,CAEA,IAAIzD,EAAQlB,EAAKoF,GAAIC,GACjBR,GAAa3D,EAAMuC,EAAErC,IAAMyD,EAASzD,GAAKF,EAAMuC,EAAEpC,IAAMwD,EAASxD,GAAKH,EAAMuC,EAAEnC,IAAMuD,EAASvD,IAC9FuD,EAAW3D,EAAMuC,EACjB7D,EAAGkB,KAAKI,EAAMuC,EAAErC,EAAGF,EAAMuC,EAAEpC,EAAGH,EAAMuC,EAAEnC,IAExC1B,EAAG0F,KAAKvE,EAAGE,EAAG+B,EAAIG,QAIhBa,GAAe,SAACjD,EAAGE,GACvB,IAAMc,EAAKC,KAAKC,IAAInC,EAAGC,GAAImC,EAAMH,EAAG,EAC9BiB,EAAKjB,EArLA,IAqLWoB,EAAKpB,EArLJ,IAsLnBwD,EAAOvD,KAAKiB,OAAOlC,EAAImB,GAAOc,GAC9BwC,EAAOxD,KAAKiB,OAAOhC,EAAIiB,GAAOiB,GAClC,OAAO,IAAIO,GAAK6B,EAAMC,IAGlBrD,GAAqB,SAACvC,EAAIiC,EAAIC,GAClClC,EAAGM,WAAWA,GACdN,EAAG6F,OAAO,KACV7F,EAAG8F,aAAa,GAChB9F,EAAG+F,UAAU9D,EAAIC,GACjBlC,EAAGgG,MAAM,GAAI,GACV1F,EAAa,MAAQ,IACtBA,GAAwB,SAAVG,GAAoB,EAAI,GACrCJ,IAAcI,IACfH,GAAwB,SAAVG,GAAoB,EAAI,GACxCJ,EAAYI,GA6CRc,G,WAKJ,aAAc,yBAJdsC,OAIa,OAHbV,YAGa,OAFbQ,WAEa,EACX9E,KAAKgF,EAAI,CAACrC,EAAG,IAAKC,EAAG,IAAKC,EAAG,KAC7B7C,KAAKsE,QAAS,EACdtE,KAAK8E,MAAQ,E,mDAIb9E,KAAKsE,QAAS,I,0BAGZ3B,EAAGC,EAAGC,EAAGiC,GACX9E,KAAKgF,EAAI,CAACrC,IAAGC,IAAGC,KAChB7C,KAAK8E,MAAQA,EACb9E,KAAKsE,QAAS,M,KAIZW,GAIJ,WAAYb,EAAGzB,GAAG,yBAHlByB,OAGiB,OAFjBzB,OAEiB,EACf3C,KAAKoE,EAAIA,EACTpE,KAAK2C,EAAIA,G,iBC5QAyE,GAAb,2MAEEC,mBAFF,IA2BEC,kBAAoB,aA3BtB,wEAKI,OACE,yBAAKC,GAAG,mBAAmBhI,UAAU,kBACnC,yBAAKA,UAAU,eACb,2BAAOiI,KAAK,QAAQD,GAAG,SAASE,KAAK,SAASlI,UAAU,aAAamI,QAASC,GAAoBC,gBAAc,IAChH,2BAAOC,QAAQ,WAEf,2BAAOL,KAAK,QAAQD,GAAG,SAASE,KAAK,SAASlI,UAAU,aAAamI,QAASC,KAC9E,2BAAOE,QAAQ,WAEf,2BAAOL,KAAK,QAAQD,GAAG,SAASE,KAAK,SAASlI,UAAU,aAAamI,QAASC,KAC9E,2BAAOE,QAAQ,YAEjB,kBAAC,IAAD,CAAQtI,UAAU,YAAYsC,MAAO8F,EAAiBxE,KAAMwE,EAAgBzC,cAAeyC,GAAyBvC,aAAcuC,GAAwBnC,cAAemC,QAjBjL,0CAuBI3H,KAAKqH,cAAgBS,SAASC,cAAc,qBAC5CC,6BAAkBhI,KAAKqH,iBAxB3B,6CA+BIY,yCA/BJ,GAA8B7H,IAAMC,WCIvB6H,I,MAAb,2MAECC,MAAQ,CACD9F,KAAM,WAHd,EA6BY+F,OAAS,SAACC,GHtCIzG,EAAT,UAAVA,EAA2B,OACjB,QGuCT,EAAK3B,MAAMqI,IAAIC,SAAS,IACxB,EAAKA,SAAS,CAAClG,KAAkB,UAAVT,EAAqB,UAAY,WAhChE,wEAMQ,OACI,yBAAKrC,UAAU,gBACX,yBACIA,UAAU,mBACViJ,MAAM,6BACNC,WAAW,+BACXC,MAAM,OACNC,OAAO,OACPjB,QAAS1H,KAAKoI,QAEd,uBAAGQ,UAAU,cACT,0BAAMrJ,UAAU,eAAesJ,MAAO7I,KAAKmI,MAAOW,EAAE,2mBAjB5E,GAAiC1I,IAAMC,YCD1B0I,GAAb,iLAEQ,OACI,yBAAKxJ,UAAU,cACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAASA,UAAU,kBAAkBM,GAAG,KACpC,yBAAKN,UAAU,cAAcgI,GAAG,eAC5B,yBACAiB,MAAM,6BACNC,WAAW,+BACXC,MAAM,OACNC,OAAO,QAEH,2BAAOnB,KAAK,YAAZ,2RAQA,uBAAGD,GAAG,WACF,uBAAGA,GAAG,YAEN,uBAAGA,GAAG,aACF,uBAAGA,GAAG,YACF,0BAAMA,GAAG,YAAYhI,UAAU,MAAMuJ,EAAE,+JAEvC,0BAAMvB,GAAG,WAAWhI,UAAU,MAAMuJ,EAAE,sLAG1C,uBAAGvB,GAAG,YACF,oCAAgBA,GAAG,aAAayB,cAAc,iBAAiBC,GAAG,SAASC,GAAG,OAAOC,GAAG,UAAUC,GAAG,QACjG,0BAAOC,OAAO,gBAAgBR,MAAO,CAACS,UAAU,aAChD,0BAAOD,OAAO,IAAIR,MAAO,CAACS,UAAU,UAAUC,YAAY,OAE9D,0BAAMhC,GAAG,WAAWhI,UAAU,MAAMuJ,EAAE,+JAEtC,oCAAgBvB,GAAG,aAAayB,cAAc,iBAAiBC,GAAG,UAAUC,GAAG,OAAOC,GAAG,UAAUC,GAAG,QAClG,0BAAOC,OAAO,gBAAgBR,MAAO,CAACS,UAAU,aAChD,0BAAOD,OAAO,IAAIR,MAAO,CAACS,UAAU,UAAUC,YAAY,OAE9D,0BAAMhC,GAAG,WAAWhI,UAAU,MAAMuJ,EAAE,yLAMtD,0BAAMD,MAAO,CAACW,WAAY,QAA1B,UAKR,kBAAC,IAAD,CAASjK,UAAU,kBAAkBM,GAAG,SACpC,uCAIJ,kBAAC,IAAD,CAASN,UAAU,kBAAkBM,GAAG,aACpC,2CAIJ,kBAAC,GAAD,CAAayI,IAAKtI,KAAKC,MAAMqI,eAlE7D,GAA4BlI,IAAMC,WCsBnBiI,I,uLAtBX,OACI,kBAAC,IAAD,CAAQmB,SAAS,KACb,kBAAC,GAAD,CAAQnB,IAAKtI,OACb,yBAAKT,UAAWqC,EAAQ,kBACtB,kBAAC,IAAD,CAAO8H,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,QAAQC,OAAK,EAACC,UAAWC,IACrC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,KAAK,YAAYC,OAAK,EAACC,UAAWC,KACzC,yBAAKtK,UAAU,mB,8BAMzBuE,QAAQC,IAAI8F,O,GArBEzJ,IAAMC,YCFxByJ,IAASC,OAAO,kBAAC,GAAD,MAASjC,SAASkC,eAAe,W","file":"static/js/main.1ec5290c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.0cade096.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gearbox.6b6fb6ad.gif\";","module.exports = __webpack_public_path__ + \"static/media/headshot.ea0d9202.jpg\";","import React from 'react';\r\nimport github from '../../resources/github.jpg';\r\nimport loading from '../../resources/gearbox.gif';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home: React.FC = () => (\r\n    <div className=\"page-body\">\r\n        <header className=\"\">\r\n            <img src={loading} alt=\"WIP\" className=\"wip-gear\"/>\r\n            <p>\r\n                This webpage is a WIP.\r\n            </p>\r\n            <p>\r\n                Check out my github while you're here!\r\n                <a href=\"https://github.com/alw98\"><img src={github} alt=\"Github Logo\" className=\"icoStyle\"></img></a>\r\n            </p>\r\n            <Link to=\"/blog\">Click here for my CS371p blog</Link><br/>\r\n            <Link to=\"/automata\">Link to rock paper scissors automata</Link>\r\n        </header>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const BlogDir: React.FC = () => (\r\n\t<div className=\"App\">\r\n\t\t<Link to=\"/blog/2\">Blog post 2</Link>\r\n\t\t<br/>\r\n\t\t<Link to=\"/blog/3\">Blog post 3</Link>\r\n\t\t<br/>\r\n\t\t<Link to=\"/blog/4\">Blog post 4</Link>\r\n\t\t<br/>\r\n\t\t<Link to=\"/blog/5\">Blog post 5</Link>\r\n\t\t<br/>\r\n\t\t<Link to=\"/blog/6\">Blog post 6</Link>\r\n\t\t<br/>\r\n\t\t<Link to=\"/blog/7\">Blog post 7</Link>\r\n\t</div>\r\n);","import React from 'react';\r\nimport '../../stylesheets/Blog.css';\r\nimport {QAModel} from '../../Models/QAModel';\r\n\r\nexport class BlogQA extends React.Component<QAModel, {}>{\r\n    render(){\r\n        return(\r\n            <div className=\"blog-qa-section\">\r\n                <h3 className=\"blog-question\">\r\n                    {this.props.question}\r\n                </h3>\r\n                <div className=\"blog-response\">\r\n                    {this.props.response}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};","import React from 'react';\r\nimport '../../stylesheets/Blog.css';\r\nimport { BlogQA } from './BlogQA';\r\nimport { QAModel } from '../../Models/QAModel';\r\nimport image from '../../resources/headshot.jpg';\r\n\r\ninterface Props{\r\n    qas: QAModel[];\r\n    title: string;\r\n}\r\n\r\nexport class BlogEntry extends React.Component<Props, {}>{\r\n    render(){\r\n            return(\r\n            <div className=\"blog-entry-container\">\r\n                <h1>Armond Willingham</h1>\r\n                <h2>{this.props.title}</h2>\r\n                <img src={image} alt=\"headshot\" className=\"blog-headshot\"/>\r\n                {this.props.qas.map(qa => <BlogQA question={qa.question} response={qa.response}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week 2'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `Last week I began working on the Collatz project. Thankfully over the summer I had a lot of hands\r\n          on experience with Git and CI, so I understand how most of it works, \r\n          which made the project setup a breeze! Other than that I didn't do much \r\n          besides play video games and go to classes, since the semester hasn't really picked up yet. \r\n          I'm sure in the coming weeks I will be a lot busier!`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `Right now the only thing in my way is creating all of the acceptance tests for the Collatz project.\r\n          I believe the spec calls for 200 acceptance tests, which isn't trivial, and I'm not sure how to make them \r\n          without knowing cycle lengths before hand. It's definitely something I will be thinking about for the next\r\n          couple of days!`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `Next week I plan to finish Collatz, change this blog to be React with TypeScript, and go win OGT San Antonio \r\n          for the club I am a part of, TXTS! It's going to be a packed week, especially since my other CS projects are beginning to be assigned.`;\r\n\r\nlet q4 = `What was my experience in learning about assertions and going over the Collatz project?`;\r\nlet r4 = `I've had quite a bit of usage with assertions in program testing throughout college and work, but it was\r\n          interesting to see the logic behind the correct usage of them. I plan to use them more often for sanity\t\r\n          checking in my own code, the professor gave a really great tip about not using assertions when dealing \r\n          with user input. I had never thought about the implications, but it's clear as day now.`;\r\n\r\nlet q5 = `What's my tip of the week?`;\r\nlet r5 = `Learn how to use Git!!! Don't just work off of master, commiting whenever you're done for the day.  \r\n\t\t  Instead, make use of CI and any time you want to test incremental changes, commit! More important than \r\n\t\t  commiting often, however, is to commit onto dedicated branches. If you have a new issue you've began work \r\n\t\t  on, create a new branch for it and keep your work related to that issue solely on that branch, until \r\n\t\t  you're ready to merge into master! This makes for easy debugging to figure out where something went \r\n\t\t  wrong allows, you to quickly iterate, and prepares you for working in the real world!`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\nexport const Blog2: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week of 23 Sep - 29 Sep'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `I spent a lot of time interviewing and talking with recruiters, so I didn't\r\n          spend as much time as I would have liked to this week working on school.\r\n          As such, I need to catch up on a lot of my school work, but it should all \r\n          be manageable.`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `Right now I have 4 projects and a test in the next week, so I have a lot of programming\r\n          and studying in my way right now. On the bright side, none of it appears to be too difficult\r\n          or time consuming, so I should be able to squeak by with my sanity intact.`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `I will spend most all of my time programming and studying. I have a WebApps project,\r\n          Info Retrieval project, OOP project, paper and test due, so I'm going to be busy non-stop.\r\n          I won't have any time to play games this week!`;\r\n\r\nlet q4 = `What was my experience learning about stack-allocated array, heap allocated array, and equal()?`;\r\nlet r4 = `Parts of it were definitely eye opening, and I feel like these concepts are pretty critical \r\n          for day to day usage in a programming profession, so I'm surprised we haven't learned about them earlier.\r\n          I'm interested to see where this all leads us next week.`;\r\n\r\nlet q5 = `What's my pick/tip of the week?`;\r\nlet r5 = `Don't be afraid to not know something at an interview! On a lot of the technical interview questions I've been asked,\r\n          I will be able to easily come up with a naive solution, but will have a much tougher time coming up with an optimized one.\r\n          If worst comes to worst, I'll give in and ask them what their solution is, and I'll make an effort to understand\r\n          it. This act of actually trying to learn how to do something in the middle of an interview reflects very well on\r\n          how you'll act if you actually get the job, showing that you're capable of quick thinking and learning new, relevant concepts!`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\n\r\nexport const Blog3: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week of 30 Sep - 6 Oct'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `My past week was filled with tests and projects, and I still have some that I need to work on. I also got second place at OGT Austin, and I'm pretty proud of that!`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `I still have several projects in my way next week, a test, and then an interview in California on Thursday. It's going to be a crazy hectic week!`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `Like I said, I've got projects, a test, an interview, and whatever misc. work I can't think of right now. Hopefully I'll be able to scrounge up some free time to hang out with friends, though!`;\r\n\r\nlet q4 = `What was your experience in learning about equal(), copy(), fill(), and the different STL containers?`;\r\nlet r4 = `It was interesting to see how these functions work, and also interesting to see how they relate to each other. This information will be critical moving forward and working with templates.`;\r\n\r\nlet q5 = `What's my pick/tip of the week?`;\r\nlet r5 = `Make time for side projects during the week. For me, side projects keep programming interesting and ensure I keep learning things outside of school. They also look great to potential employers, and teach you how to learn on your own!`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\n\r\nexport const Blog4: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week 5'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `I had a crazy amount of tests last week. I was busy studying all week long, and taking tests in my free time. It was horrible.`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `I have a few projects in my way, and more tests in the coming week. It's going to be busy.`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `Next week I plan to study in most of my free time, and maybe get some work done on my website, adding in some WebGL stuff or maybe even OpenGL with WASM.`;\r\n\r\nlet q4 = `What was your experience of the peer-instruction exam?`;\r\nlet r4 = `I thought it was god-awful. I wish I could've jsut spent the entire hour and a half working consistently on my own. Instead, half way through the test, right when I was getting into\r\n         the hard stuff, I had to start over. Everyone around me was just cheating, copying verbatim what other people had done. I didn't do it because it's wrong and against the code of conduct,\r\n         but I guess I should have just cheated along with everyone else to ensure I got a good grade. I really, really hated the format.`;\r\n\r\nlet q5 = `What's my pick/tip of the week?`;\r\nlet r5 = `Prioritize your  time. Sometimes you just don't have enough time to spend on everything you need to for school, so you have to pick your battles and work on the things that are most pressing.`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\n\r\nexport const Blog5: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week 6'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `Studied for tests, finished Allocator, and just tried to make it through the week. I also spent some time with my parents this weekend, because they came down to visit.`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `At this point, not too much.`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `Register for classes, drop my history class because I just can't bring myself to care about it enough to do well, and I'm going to try and fix my sleep schedule.`;\r\n\r\nlet q4 = `What was your experience of the allocator project?`;\r\nlet r4 = `I enjoyed it. It was easier than I expected it to be, but I had a few issues getting it set up correctly. Honestly, getting my environment set up probably took the longest.`;\r\n\r\nlet q5 = `What's my pick/tip of the week?`;\r\nlet r5 = `Try out the game Descenders! It's a fun indie mountain biking game, with procedurally generated maps. They also have a robust modding system, which I've had a ton of fun playing around with. I don't really do much 3D modelling any more, but Descenders has gotten me back into the habit!`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\n\r\nexport const Blog6: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","import React from 'react';\r\nimport {BlogEntry} from '../../BlogComponents/BlogEntry';\r\nimport { QAModel } from '../../../Models/QAModel';\r\n\r\nlet title = 'CS371p Fall 2019: Week 7'\r\nlet qas: QAModel[] = [];\r\n\r\nlet q1 = `What did I do this past week?`;\r\nlet r1 = `This last week was spent working on projects and  tests, along with getting used to the cold! I really hate winter, I live in Texas so that I can stay warm year round! I also spent\r\n            a few hours creating a Twitch bot, and learning how to use the Google speech api to convert text to speech. I used it to basically make my own personal assistant for my computer,\r\n            and used the iTunes COM interface to control my music with it.`;\r\n\r\nlet q2 = `What's in my way?`;\r\nlet r2 = `I have 2 projects coming up next week, along with winter, a job application, and a fundraiser for TXTS.`;\r\n\r\nlet q3 = `What will I do next week?`;\r\nlet r3 = `Next week I plan on finishing up Darwin early, then getting my other project knocked out so that I'm not flooded all week long. I don't have any tests so I should be able to make everything go smoothly.`;\r\n\r\nlet q4 = `What was your experience of the vector implementation?`;\r\nlet r4 = `It's very interesting seeing the mechanics of how vector works under the hood. I've used them before in the few times I've done Cpp programing, but learning what makes them tick and how to be\r\n            efficient when using them is very important. Also, I didn't even know about the initialization list or copy constructors, or allocation works! It's very eye opening.`;\r\n\r\nlet q5 = `What's my pick/tip of the week?`;\r\nlet r5 = `If you plan on developing on and for Windows, learn about the COM system. It is a powerful and easy to use way of communicating between programs on Windows, and essentially allows you to\r\n            interface with other programs like they're an imported module, depending on what functionality they export. It's a really neat system, that has the potential to be very powerful.`;\r\n\r\nqas.push({question: q1, response: r1});\r\nqas.push({question: q2, response: r2});\r\nqas.push({question: q3, response: r3});\r\nqas.push({question: q4, response: r4});\r\nqas.push({question: q5, response: r5});\r\n\r\nexport const Blog7: React.FC = () => (\r\n    <BlogEntry qas={qas} title={title}/>\r\n);","export function switchTheme(): void {\r\n    if(Theme === 'light') Theme = 'dark';\r\n    else Theme = 'light';\r\n}\r\n\r\nlet Theme = 'light';\r\n\r\nexport {Theme};\r\n","import {Theme} from './Theme';\r\n\r\nconst DEBUG = false;\r\nlet p5, parent, w, h;\r\nconst xRes = 200, yRes = 200, maxLev = 4, simSteps = 1;\r\nlet grid;\r\nlet lastTheme\r\nlet background\r\nlet curColor;\r\nlet alive : Pair[];\r\n\r\nexport const setup = (p: any, par: any) => {\r\n  p5 = p;\r\n  p5.disableFriendlyErrors = true;\r\n  parent = par;\r\n  w = window.innerWidth;\r\n  h = window.innerHeight - 40;\r\n  grid = Array(xRes).fill(0).map(x => Array(yRes));\r\n  for(let x = 0; x < grid.length; x++){\r\n    for(let y = 0; y < grid[0].length; y++){\r\n      let robit = new Robit();\r\n      grid[x][y] = robit;\r\n    }\r\n  } \r\n  alive = [];\r\n  lastTheme = Theme;\r\n  background = Theme === 'dark' ? 0 : 255; \r\n  curColor = {r: 255, g: 0, b: 0};\r\n  let canvas = p5.createCanvas(w, h).parent(parent).canvas;\r\n  canvas.className += \" automaton-canvas\"\r\n  canvas.addEventListener('touchmove', function(e) {\r\n  \r\n          e.preventDefault();\r\n  \r\n  }, false);\r\n}\r\n\r\nexport const draw = (p5: any) => {\r\n  const hw = w/2, hh = h/2, ma = Math.max(w, h), hma = ma/2;\r\n  setupCanvasForDraw(p5, hw, hh);\r\n  if(DEBUG) drawBackLines(p5, ma, hma);\r\n  if(DEBUG) drawGridPoints(p5, ma, hma);\r\n  updateGrid();\r\n  drawGrid(p5, ma, hma);\r\n\r\n    if(p5.frameCount % 25 === 0)\r\n      console.log(p5.frameRate());\r\n}\r\n\r\nconst updateGrid = () => {\r\n  for(let i = 0; i < simSteps; i++){\r\n    alive.forEach(pair => {\r\n      let x = pair.l, y = pair.r;\r\n      let cur = grid[x][y];\r\n      if(!cur.exists){\r\n        console.log(\"something dead is alive\");\r\n        return;\r\n      }\r\n      let dx = Math.floor(Math.random() * 3 - 1);\r\n      let dy = Math.floor(Math.random() * 3 - 1);\r\n      if((x !== 0 || dx !== -1) && (x !== xRes - 1 || dx !== 1)){\r\n        if((y !== 0 || dy !== -1) && (y !== yRes - 1 || dy !== 1)){\r\n          let f = grid[x + dx][y + dy];\r\n          if(!f.exists && cur.level > 0){\r\n            f.set(cur.c.r, cur.c.g, cur.c.b, cur.level - 1);\r\n            alive.push(new Pair(x + dx, y + dy));\r\n\r\n          } else if(f.exists){\r\n            if(cur.c.r === 255 && f.c.b === 255){\r\n\r\n              if(f.level === 0)\r\n                f.set(255, 0, 0, 0);\r\n              else f.level--;\r\n              if(cur.level < maxLev) cur.level++;\r\n\r\n            } else if(cur.c.g === 255 && f.c.r === 255){\r\n\r\n              if(f.level === 0)\r\n                f.set(0, 255, 0, 0);\r\n              else f.level--;\r\n              if(cur.level < maxLev) cur.level++;\r\n\r\n            } else if(cur.c.b === 255 && f.c.g === 255){\r\n\r\n              if(f.level === 0)\r\n                f.set(0, 0, 255, 0);\r\n              else f.level--;\r\n              if(cur.level < maxLev) cur.level++;\r\n\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n}\r\n\r\nexport const windowResized = (p5: any) => {\r\n  w = window.innerWidth;\r\n  h = window.innerHeight - 40;\r\n  p5.resizeCanvas(w, h);\r\n}\r\n\r\nexport const mouseDragged = (p5) => {\r\n  let x = p5.mouseX, y = p5.mouseY;\r\n  if(x < 0 || x > w || y < 0 || y > h)\r\n    return;\r\n  const adjX = x - w / 2;\r\n  const adjY = -(y - h / 2);\r\n  let pair = getGridIndex(adjX, adjY);\r\n  let robit = grid[pair.l][pair.r];\r\n  if(!robit.exists)\r\n    alive.push(pair);\r\n  robit.set(curColor.r, curColor.g, curColor.b, maxLev);\r\n}\r\n\r\nexport const mouseReleased = async (p5) => {\r\n  let b = curColor;\r\n  await new Promise(resolve => setTimeout(resolve, 1));\r\n  if(b !== curColor)\r\n    return;\r\n  mouseDragged(p5);\r\n}\r\n\r\nexport const colorRed = () => {\r\n  curColor = {r: 255, g: 0, b: 0};\r\n}\r\n\r\nexport const colorGreen = () => {\r\n  curColor = {r: 0, g: 255, b: 0};\r\n}\r\n\r\nexport const colorBlue = () => {\r\n  curColor = {r: 0, g: 0, b: 255};\r\n}\r\nconst drawGrid = (p5, ma, hma) => {\r\n  const dx = ma / xRes, dy = ma / yRes;\r\n  let  ystart, xstart, yend, xend;\r\n  if(w === h){\r\n    ystart = -hma;\r\n    yend = hma;\r\n    xstart = -hma;\r\n    xend = hma;\r\n  } else if(ma === w){\r\n    ystart = -hma + (Math.ceil(((w / 2) - (h / 2)) / dy) - 1) * dy;\r\n    yend = h / 2 + dy;\r\n    yend = yend > hma ? h / 2 : yend;\r\n    xstart = -hma;\r\n    xend = hma;\r\n  } else {\r\n    xstart = -hma + (Math.ceil(((h / 2) - (w / 2)) / dy) - 1) * dx;\r\n    xend = w / 2 + dx;\r\n    xend = xend > hma ? w / 2 : xend;\r\n    ystart = -hma;\r\n    yend = hma;\r\n\r\n  }\r\n  alive.sort((a, b) => {\r\n    let c1 = grid[a.l][a.r];\r\n    let aval = c1.c.r * 3 + c1.c.g * 2 + c1.c.b;\r\n    let c2 = grid[b.l][b.r];\r\n    let bval = c2.c.r * 3 + c2.c.g * 2 + c2.c.b;\r\n    return aval - bval;\r\n  });\r\n  p5.noStroke();\r\n  let lastFill;\r\n  alive.forEach(pair => {\r\n    let xi = pair.l, yi = pair.r, x, y;\r\n    x = -hma + xi * dx;\r\n    y = -hma + yi * dx;\r\n    if(x < xstart || x > xend || y < ystart || y > yend)\r\n      return;\r\n    let robit = grid[xi][yi];\r\n    if(!lastFill || (robit.c.r !== lastFill.r || robit.c.g !== lastFill.g || robit.c.b !== lastFill.b)){\r\n      lastFill = robit.c;\r\n      p5.fill(robit.c.r, robit.c.g, robit.c.b);  \r\n    }       \r\n    p5.rect(x, y, dx, dy);\r\n  });\r\n}\r\n\r\nconst getGridIndex = (x, y) => {\r\n  const ma = Math.max(w, h), hma = ma/2;\r\n  const dx = ma / xRes, dy = ma / yRes;\r\n  let xind = Math.floor((x + hma) / dx);\r\n  let yind = Math.floor((y + hma) / dy);\r\n  return new Pair(xind, yind);\r\n}\r\n\r\nconst setupCanvasForDraw = (p5, hw, hh) => {\r\n  p5.background(background);\r\n  p5.stroke(255);\r\n  p5.strokeWeight(1);\r\n  p5.translate(hw, hh);\r\n  p5.scale(1, -1);\r\n  if(background % 255 !== 0)\r\n    background += Theme === 'dark' ? -5 : 5;\r\n  if(lastTheme !== Theme)\r\n    background += Theme === 'dark' ? -5 : 5;\r\n  lastTheme = Theme;\r\n}\r\n\r\nconst drawBackLines = (p5, ma, hma) => {\r\n  const dx = ma / xRes, dy = ma / yRes;\r\n  let  ystart, xstart, yend, xend;\r\n  if(ma === w){\r\n    ystart = -hma + (Math.ceil(((w / 2) - (h / 2)) / dy) - 1) * dy;\r\n    yend = h / 2 + dy;\r\n    xstart = -hma - dx;\r\n    xend = hma + dx;\r\n  } else {\r\n    xstart = -hma + (Math.ceil(((h / 2) - (w / 2)) / dy) - 1) * dx;\r\n    xend = w / 2 + dx;\r\n    ystart = -hma - dy;\r\n    yend = hma + dy;\r\n  }\r\n  for(let x = xstart; x <= xend; x += dx)\r\n    p5.line(x, -hma, x, hma);\r\n\r\n  for(let y = ystart; y <= yend; y += dy)\r\n    p5.line(-hma, y, hma, y);\r\n}\r\n\r\nconst drawGridPoints = (p5, ma, hma) => {\r\n  const dx = ma / xRes, dy = ma / yRes;\r\n  let  ystart, xstart, yend, xend;\r\n  if(ma === w){\r\n    ystart = -hma + (Math.ceil(((w / 2) - (h / 2)) / dy) - 1) * dy;\r\n    yend = h / 2 + dy;\r\n    xstart = -hma - dx;\r\n    xend = hma + dx;\r\n  } else {\r\n    xstart = -hma + (Math.ceil(((h / 2) - (w / 2)) / dy) - 1) * dx;\r\n    xend = w / 2 + dx;\r\n    ystart = -hma - dy;\r\n    yend = hma + dy;\r\n  }\r\n  for(let y = ystart; y <= yend; y += dy){\r\n      for(let x = xstart; x <= xend; x += dx){\r\n        //p5.circle(x, y, 0);\r\n      }\r\n  }\r\n}\r\n\r\nclass Robit{\r\n  c: { r: number; g: number; b: number; };\r\n  exists: boolean;\r\n  level: number;\r\n\r\n  constructor(){\r\n    this.c = {r: 255, g: 255, b: 255};\r\n    this.exists = false;\r\n    this.level = 0;\r\n  }\r\n\r\n  kill(){\r\n    this.exists = false;\r\n  }\r\n\r\n  set(r, g, b, level){\r\n    this.c = {r, g, b};\r\n    this.level = level;\r\n    this.exists = true;\r\n  }\r\n}\r\n\r\nclass Pair{\r\n  l:number;\r\n  r:number;\r\n  \r\n  constructor(l, r){\r\n    this.l = l;\r\n    this.r = r;\r\n  }\r\n}","import React from 'react';\r\nimport Sketch from 'react-p5';\r\nimport * as ColorAuto from '../../Models/ColorAuto'; \r\nimport '../../stylesheets/Automaton.css';\r\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\nexport class Automata extends React.Component<{}, {}>{\r\n\r\n  targetElement;\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"auto-scroll-lock\" className=\"auto-container\">\r\n        <div className=\"auto-inputs\">\r\n          <input type=\"radio\" id=\"auto-r\" name=\"colors\" className=\"auto-radio\" onClick={ColorAuto.colorRed} defaultChecked/>\r\n          <label htmlFor=\"auto-r\"/>\r\n\r\n          <input type=\"radio\" id=\"auto-g\" name=\"colors\" className=\"auto-radio\" onClick={ColorAuto.colorGreen}/>\r\n          <label htmlFor=\"auto-g\"/>\r\n\r\n          <input type=\"radio\" id=\"auto-b\" name=\"colors\" className=\"auto-radio\" onClick={ColorAuto.colorBlue}/>\r\n          <label htmlFor=\"auto-b\"/>\r\n        </div>\r\n        <Sketch className='automaton' setup={ColorAuto.setup} draw={ColorAuto.draw} windowResized={ColorAuto.windowResized} mouseDragged={ColorAuto.mouseDragged} mouseReleased={ColorAuto.mouseReleased}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.targetElement = document.querySelector('#auto-scroll-lock');\r\n    disableBodyScroll(this.targetElement);\r\n  }\r\n  \r\n  showTargetElement = () => {\r\n  };\r\n  \r\n  componentWillUnmount() {\r\n    clearAllBodyScrollLocks();\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Theme, switchTheme} from '../../Models/Theme';\r\n\r\ninterface Props {\r\n\tApp: React.Component;\r\n}\r\n\r\ninterface State {\r\n    fill: string;\r\n}\r\nexport class ThemeToggle extends React.Component<Props, State>{\r\n\r\n\tstate = {\r\n        fill: '#9A9A9A'\r\n\t};\r\n    render(){\r\n        return(\r\n            <div className=\"theme-toggle\">\r\n                <svg \r\n                    className=\"theme-toggle-svg\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\" \r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                    width=\"30px\"\r\n                    height=\"30px\"\r\n                    onClick={this.toggle}\r\n                >\r\n                    <g transform=\"scale(.75)\">\r\n                        <path className=\"theme-toggle\" style={this.state} d=\"M17.9,40c-0.5-0.1-1-0.1-1.6-0.2c-2.5-0.3-4.8-1-7-2.1C7,36.5,5,35,3.3,33.1c-1.3-1.4-2.4-3-3.2-4.7\r\n                        c0-0.1-0.1-0.1-0.1-0.2c0,0,0,0,0-0.1c0.5,0.3,1.1,0.7,1.6,1c1.8,1.1,3.7,1.8,5.8,2.3c3.3,0.7,6.5,0.5,9.7-0.5\r\n                        c2.5-0.8,4.7-2.1,6.6-3.8c2-1.8,3.6-4,4.5-6.6c1-2.5,1.3-5.1,1-7.7c-0.3-2.9-1.3-5.6-3-8C25,3,23.4,1.5,21.6,0.3\r\n                        c-0.1-0.1-0.2-0.2-0.4-0.3c0.1,0,0.2,0,0.3,0c0.1,0,0.3,0.1,0.4,0.1c2.7,0.3,5.2,1.2,7.5,2.4c2.1,1.1,3.9,2.6,5.5,4.3\r\n                        c1.9,2.1,3.3,4.4,4.1,7c0.9,2.6,1.2,5.2,0.9,7.9c-0.3,3.5-1.5,6.6-3.5,9.5c-1.8,2.5-4.1,4.6-6.9,6.1c-2.4,1.3-4.9,2.2-7.7,2.5\r\n                        c-0.5,0.1-1,0.1-1.5,0.2C19.5,40,18.7,40,17.9,40z\"/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private toggle = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\r\n        switchTheme();\r\n        this.props.App.setState({});\r\n        this.setState({fill:  (Theme === 'light') ? '#9A9A9A' : 'white'});\r\n    }\r\n}","import React from 'react';\r\nimport '../../stylesheets/Header.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ThemeToggle } from \"./ThemeController\";\r\n\r\ninterface Props{\r\n    App: React.Component;\r\n}\r\n\r\nexport class Header extends React.Component<Props, {}>{\r\n    render(){\r\n        return(\r\n            <div className=\"header-nav\">\r\n                <div className=\"header-box\">\r\n                    <div className=\"header-text\">\r\n                        <div className=\"header-grid\">\r\n                            <div className=\"header-cell\">\r\n                                <NavLink className=\"header-nav-link\" to=\"/\">\r\n                                    <div className=\"header-flex\" id=\"header-logo\">\r\n                                        <svg \r\n                                        xmlns=\"http://www.w3.org/2000/svg\" \r\n                                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                        width=\"40px\"\r\n                                        height=\"40px\"\r\n                                        >\r\n                                            <style type=\"text/css\">\r\n                                                {\r\n                                                    `.st0{stroke:#000000;stroke-miterlimit:10;}\r\n                                                    .st1{fill:#FFFFFF;}\r\n                                                    .st2{fill:url(#XMLID_107_);}\r\n                                                    .st3{fill:url(#XMLID_108_);}`\r\n                                                }\r\n                                            </style>\r\n                                            <g id=\"Layer_1\">\r\n                                                <g id=\"Layer_3\">\r\n                                                </g>\r\n                                                <g id=\"XMLID_40_\">\r\n                                                    <g id=\"XMLID_8_\">\r\n                                                        <path id=\"XMLID_11_\" className=\"st1\" d=\"M20.7,31.8h-2.3l-1.8-6.3H9.2l-1.7,6.3H5.2l6.7-22.5H14L20.7,31.8z M15.9,23.1l-2.7-9.6\r\n                                                            c-0.1-0.3-0.2-0.8-0.3-1.5h0c-0.1,0.6-0.2,1.1-0.3,1.5l-2.7,9.6H15.9z\"/>\r\n                                                        <path id=\"XMLID_9_\" className=\"st1\" d=\"M19.6,28l4.2-18.8h2l3.7,17.4c0.1,0.6,0.2,1.3,0.3,2.1h0c0-0.5,0.1-1.3,0.3-2.2l3.6-17.3h2.2\r\n                                                            l-4.9,22.5h-2.4l-3.6-16.5c-0.2-0.7-0.2-1.5-0.3-2.3h0c0,0.8-0.2,1.5-0.3,2.3l-3.6,16.5\"/>\r\n                                                    </g>\r\n                                                    <g id=\"XMLID_2_\">\r\n                                                        <linearGradient id=\"XMLID_107_\" gradientUnits=\"userSpaceOnUse\" x1=\"5.2161\" y1=\"20.5\" x2=\"20.6757\" y2=\"20.5\">\r\n                                                            <stop  offset=\"9.183674e-002\" style={{stopColor:'#68CBDC'}}/>\r\n                                                            <stop  offset=\"1\" style={{stopColor:'#B0E2F5',stopOpacity:0.5}}/>\r\n                                                        </linearGradient>\r\n                                                        <path id=\"XMLID_4_\" className=\"st2\" d=\"M20.7,31.8h-2.3l-1.8-6.3H9.2l-1.7,6.3H5.2l6.7-22.5H14L20.7,31.8z M15.9,23.1l-2.7-9.6\r\n                                                            c-0.1-0.3-0.2-0.8-0.3-1.5h0c-0.1,0.6-0.2,1.1-0.3,1.5l-2.7,9.6H15.9z\"/>\r\n                                                        <linearGradient id=\"XMLID_108_\" gradientUnits=\"userSpaceOnUse\" x1=\"19.5706\" y1=\"20.5\" x2=\"35.7839\" y2=\"20.5\">\r\n                                                            <stop  offset=\"9.183674e-002\" style={{stopColor:'#68CBDC'}}/>\r\n                                                            <stop  offset=\"1\" style={{stopColor:'#B0E2F5',stopOpacity:0.5}}/>\r\n                                                        </linearGradient>\r\n                                                        <path id=\"XMLID_7_\" className=\"st3\" d=\"M19.6,28l4.2-18.8h2l3.7,17.4c0.1,0.6,0.2,1.3,0.3,2.1h0c0-0.5,0.1-1.3,0.3-2.2l3.6-17.3h2.2\r\n                                                            l-4.9,22.5h-2.4l-3.6-16.5c-0.2-0.7-0.2-1.5-0.3-2.3h0c0,0.8-0.2,1.5-0.3,2.3l-3.6,16.5\"/>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </g>\r\n                                        </svg>\r\n                                        <span style={{marginLeft: '5px'}}>\r\n                                            Home\r\n                                        </span>\r\n                                    </div>\r\n                                </NavLink>\r\n                                <NavLink className=\"header-nav-link\" to=\"/blog\">\r\n                                    <span>\r\n                                        Blog\r\n                                    </span>\r\n                                </NavLink>\r\n                                <NavLink className=\"header-nav-link\" to=\"/automata\">\r\n                                    <span>\r\n                                        Automata\r\n                                    </span>\r\n                                </NavLink>\r\n                                <ThemeToggle App={this.props.App}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};","import React from 'react';\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport * as Pages from \"./Pages\";\r\nimport {Header} from \"../HeaderComponents/Header\";\r\nimport {Theme} from \"../../Models/Theme\";\r\nimport '../../stylesheets/App.css';\r\n\r\nclass App extends React.Component<{}, {}>{\r\n  render(){\r\n    return (\r\n        <Router basename='/'>\r\n            <Header App={this}/>\r\n            <div className={Theme + \" app-container\"}>\r\n              <Route path=\"/\" exact component={Pages.Home}/>\r\n              <Route path=\"/blog\" exact component={Pages.BlogDir}/>\r\n              <Route path=\"/blog/2\" exact component={Pages.Blog2}/>\r\n              <Route path=\"/blog/3\" exact component={Pages.Blog3}/>\r\n              <Route path=\"/blog/4\" exact component={Pages.Blog4}/>\r\n              <Route path=\"/blog/5\" exact component={Pages.Blog5}/>\r\n              <Route path=\"/blog/6\" exact component={Pages.Blog6}/>\r\n              <Route path=\"/blog/7\" exact component={Pages.Blog7}/>\r\n              <Route path=\"/automata\" exact component={Pages.Automata}/>\r\n              <div className='background'></div>\r\n            </div>\r\n        </Router>\r\n    );\r\n  }\r\n  click(){\r\n    console.log(Pages);\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.css';\r\nimport App from './Components/Pages/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}